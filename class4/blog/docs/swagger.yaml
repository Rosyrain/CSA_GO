basePath: /
definitions:
  controller._ResponsePostList:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.ResCode'
        description: 业务相应状态码
      data:
        description: 数据
        items:
          $ref: '#/definitions/models.ApiPostDetail'
        type: array
      message:
        description: 提示信息
        type: string
    type: object
  controller.ResCode:
    enum:
    - 1000
    - 1001
    - 1002
    - 1003
    - 1004
    - 1005
    - 1006
    - 1007
    type: integer
    x-enum-varnames:
    - CodeSuccess
    - CodeInvalidParam
    - CodeUserExist
    - CodeUserNotExist
    - CodeInvalidPassword
    - CodeServerBusy
    - CodeInvalidToken
    - CodeNeedLogin
  models.ApiPostDetail:
    properties:
      author_id:
        example: ""
        type: string
      author_name:
        example: rosyrain
        type: string
      content:
        example: ""
        type: string
      create_time:
        type: string
      id:
        example: ""
        type: string
      title:
        example: ""
        type: string
      vote_number:
        example: 10
        type: integer
    required:
    - content
    - title
    type: object
  models.ParamLogin:
    properties:
      password:
        example: abc123456
        type: string
      username:
        example: rosyrain
        type: string
    required:
    - password
    - username
    type: object
  models.ParamPostList:
    properties:
      order:
        description: 排序依据
        example: score
        type: string
      page:
        description: "CommunityID int64  `json:\"community_id\" form:\"community_id\"
          example:\"1\"` //\t可以为空"
        example: 1
        type: integer
      size:
        description: 每页数量
        example: 10
        type: integer
    type: object
  models.ParamSignUp:
    properties:
      password:
        example: abc123456
        type: string
      re_password:
        example: abc123456
        type: string
      username:
        example: rosyrain
        type: string
    required:
    - password
    - re_password
    - username
    type: object
  models.ParamVoteData:
    properties:
      direction:
        description: 赞成票1，反对票-1，取消图片（0）
        enum:
        - 1
        - 0
        - -1
        example: "0"
        type: string
      post_id:
        description: userID 从请求中获取当前的用户
        type: string
    required:
    - post_id
    type: object
  models.Post:
    properties:
      author_id:
        example: ""
        type: string
      content:
        example: ""
        type: string
      create_time:
        type: string
      id:
        example: ""
        type: string
      title:
        example: ""
        type: string
    required:
    - content
    - title
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: jx178861659@163.com
    name: rosyrain
    url: http://blog.rosyrain.cn/
  description: 简单的博客系统
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CSA_blog
  version: "1.0"
paths:
  /posts:
    post:
      consumes:
      - application/json
      description: 获取帖子列表接口，根据参数查询帖子列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 查询参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ParamPostList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子列表
      tags:
      - 帖子相关接口
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定ID的帖子
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 帖子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 删除帖子
      tags:
      - 帖子相关接口
  /signup:
    post:
      consumes:
      - application/json
      description: 创建新用户接口
      parameters:
      - description: 用户注册参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ParamSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      summary: 创建用户
      tags:
      - 用户相关接口
  /vote:
    post:
      consumes:
      - application/json
      description: 用户投票接口
      parameters:
      - description: 用户投票参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ParamVoteData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 用户投票
      tags:
      - 用户相关接口
swagger: "2.0"
